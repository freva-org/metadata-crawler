[build-system]
requires = ["flit_core >=3.2"]
build-backend = "flit_core.buildapi"

[project]
name = "metadata-crawler"
authors = [{name = "DKRZ, Clint", email = "freva@dkrz.de"}]
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
               "Development Status :: 4 - Beta",
               "Environment :: Console",
               "Intended Audience :: Developers",
               "Intended Audience :: Science/Research",
               "License :: OSI Approved :: BSD License",
               "Operating System :: POSIX :: Linux",
               "Programming Language :: Python :: 3",
               "Programming Language :: Python :: 3.11",
               "Programming Language :: Python :: 3.12",
               "Programming Language :: Python :: 3.13",
               "Programming Language :: Python :: 3.14",
]
dynamic = ["version"]
description="Crawl, extract and push climate metadata for indexing."
requires-python = ">=3.11"
dependencies = [
        "aiohttp",
        "appdirs",
        "anyio",
        "fsspec",
        "s3fs",
        "jinja2",
        "intake",
        "intake-xarray",
        "intake-esm",
        "pandas",
        "numpy",
        "duckdb",
        "pyarrow",
        "h5netcdf",
        "pydantic",
        "pyarrow",
        "rich",
        "rich-argparse",
        "tomli",
        "tomlkit",
        "typing_extensions",
        "zarr",
        "xarray",
        "httpx",
        "uvloop",
        "motor",
]
[project.optional-dependencies]
dev = ["flit", "tox"]
doc = [
    "sphinx",
    "sphinxcontrib_github_alt",
    "sphinx-execute-code-python3",
    "sphinx-copybutton",
    "sphinx-sitemap",
    "sphinx-togglebutton",
    "sphinxext-opengraph",
    "pydata-sphinx-theme",
    "myst-parser",
]
tests = [
    "types-appdirs",
    "black",
    "isort",
    "mock",
    "mypy",
    "pandas",
    "intake-parquet",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-env",
    "requests",
    "pre-commit",
    "toml",
]

[project.urls]
Documentation = "https://github.com/freva-org/freva-admin"
Issues = "https://github.com/freva-org/freva-admin/issues"
Source = "https://github.com/freva-org/freva-admin"
Home = "https://github.com/freva-org/freva-admin"

[project.scripts]
metadata-crawler = "metadata_crawler.cli:cli"
mdc = "metadata_crawler.cli:cli"

[project.entry-points."metadata_crawler.ingester"]
solr = "metadata_crawler.ingester.solr:SolrIndex"
mongo = "metadata_crawler.ingester.mongo:MongoIndex"

[project.entry-points."metadata_crawler.storage"]
posix = "metadata_crawler.backends.posix:PosixPath"
swift = "metadata_crawler.backends.swift:SwiftPath"
s3 = "metadata_crawler.backends.s3:S3Path"
intake = "metadata_crawler.backends.intake:IntakePath"

[package-data]
metadata_crawler = ["py.typed", "*.toml"]

[tool.flake8]
ignore = ["F405", "F403", "E704", "E203", "W503", "C901"]

[tool.isort]
known_first_party = ["metadata_crawler"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
files = "src"
strict = true
warn_unused_ignores = true
warn_unreachable = true
show_error_codes = true
install_types = true
non_interactive = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
warn_redundant_casts = true
ignore_missing_imports = true
allow_untyped_calls = true



[tool.tox]
legacy_tox_ini = """
[tox]
min_version = 4.0
env_list = types, lint, docs
[testenv]
parallel_show_output = false
[testenv:test]
deps = -e .[tests]

commands =
    pytest -vv --cov=metadata_crawler --cov-report=html:coverage_report --junitxml report.xml --cov-report xml tests/
    python3 -m coverage report --fail-under=5 --precision=2

[testenv:docs]
deps = -e .[doc]
setenv =
    LC_ALL = C
    LANG = C
allowlist_externals = make
commands = make -C docs clean
           make -C docs html
[testenv:lint]
deps = .
       black
       isort
       flake8
commands =
    python3 -m isort --check --profile black -t py313 -l 79 src
    python3 -m flake8 src --count --max-complexity=10 --ignore=E203,F405,F403,E704,W503,C901 --max-line-length=88 --statistics --show-source
[testenv:types]
deps = .
       mypy
       types-toml
       pytest-stub
       pydantic
commands = mypy --install-types --non-interactive
[testenv:release]
deps = git-python
       packaging
       tomli
       requests
commands = python3 release.py tag freva_deployment
[testenv:build]
deps = -e .
       pyinstaller
       cryptography
commands = pyinstaller --clean --noconfirm deploy-freva.spec
       """
